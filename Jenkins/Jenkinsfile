pipeline {
    agent any

    tools {
        terraform 'terraform_new'
    }

    
    stages {
        stage('Terraform init'){
            steps {
                echo "In this stage we initializate Terraform"
                sh '''cd terraform && terraform init && terraform plan'''

            }
        }

        stage('Terraform build ECR'){
            steps {
                echo "In this stage we initializate ECR"
                sh '''cd terraform && terraform apply --auto-approve -target=module.ecr'''

            }
        }

        stage('Build/Push Docker image to ECR'){
            steps {
                echo "In this stage we build Docker image and push it to ECR"
                sh  "aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 877879097973.dkr.ecr.eu-central-1.amazonaws.com" 
                sh  "docker build -t demo-app Application/." 
                sh  "docker tag demo-app:latest 877879097973.dkr.ecr.eu-central-1.amazonaws.com/demo-app:latest" 
                sh  "docker push 877879097973.dkr.ecr.eu-central-1.amazonaws.com/demo-app:latest" 
            }
        }

        stage('Build Network resources in AWS') {
            steps {
                echo 'Building Network + EKS Cluster'
                sh "pwd && ls -la"
                sh '''cd terraform && terraform apply --auto-approve -target=module.network'''
                
                
            }
        }
        
        stage('Build EKS resources in AWS') {
            steps {
                echo 'Building Network + EKS Cluster'
                sh "pwd && ls -la"
                sh '''cd terraform && terraform apply --auto-approve -target=module.eks'''
                sleep 10
                
            }
        }

        stage('Build EKS resources in AWS') {
            steps {
                echo 'Building Network + EKS Cluster'
                sh "pwd && ls -la"
                sh '''cd terraform && terraform apply --auto-approve -target=module.rds'''
                sleep 10
                
            }
        }

        stage('eksctl Connect to eks cluster') {
            steps {
                echo 'Connecting...'
                sh "pwd && ls -la"
                sh '''eksctl utils write-kubeconfig --cluster=Demo-3 --region=eu-central-1'''
                
                
            }
        }

        stage('Kubernetes applying') {
            steps {
                echo 'Creating deployment with 3 Pods and Service with LoadBalancer'
                sh "pwd && ls -la"
                sh '''cd kubernetes && kubectl apply -f app.yml'''
                sleep 10
                
            }
        }
    }
}